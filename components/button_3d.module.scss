//all button properties
.slide_L, .slide_T, .slide_skew, .fill {
  padding: 1.5vw 2vw;
  font-size: 2vw;
  font-family: arial;
  text-decoration: none;
  z-index: 1;
  color: #333;
  position: relative;
  overflow: hidden;
  border: 0;
  //border: groove;

  
  --top-color: #ccc;
  --bottom-color: #999;
  --right-color: #ddd;
  
  background: var(--top-color);

  border-radius: 3%;
  
  transition: 
    box-shadow 1s,
    transform 0.5s;
  
  box-shadow: //set 3D effect
      1px 0   0 var(--right-color),
      1px 1px 0 var(--bottom-color),
      2px 1px 0 var(--right-color),
      2px 2px 0 var(--bottom-color),
      3px 2px 0 var(--right-color),
      3px 3px 0 var(--bottom-color),
      4px 3px 0 var(--right-color),
      4px 4px 0 var(--bottom-color),
      5px 4px 0 var(--right-color),
      5px 5px 0 var(--bottom-color),
      6px 5px 0 var(--right-color),
      6px 6px 0 var(--bottom-color),
      7px 6px 0 var(--right-color),
      7px 7px 0 var(--bottom-color),
      8px 7px 0 var(--right-color),
      8px 8px 0 var(--bottom-color),
    
      -5px 20px 40px -8px #999; //set usual element shadow
  
  &:focus,
  &:hover {
    box-shadow: //update graphics upon hover
      1px 0   0 var(--right-color),
      1px 1px 0 var(--bottom-color),
      2px 1px 0 var(--right-color),
      2px 2px 0 var(--bottom-color),
      3px 2px 0 var(--right-color),
      3px 3px 0 var(--bottom-color),
      4px 3px 0 var(--right-color),
      4px 4px 0 var(--bottom-color),
      
      -5px 5px 12px -8px #999;
    
    transform: translate(10px, 3px);
  }

  
  &:active {
    box-shadow: //minimize 3D graphics to make it look like it is pressed
      1px 0   0 var(--right-color),
      1px 1px 0 var(--bottom-color);
    
    transform: translate(5px, 5px); //move to make button seem like it is pressed
  }
  &:after { //the element that transitions to cover the button background when hovered over
    content: "";
    position: absolute;
    z-index: -1;
    top: 0; bottom: 0; left: 0; right: 0;
    background: lightblue;
    width: 0;
  }
  &:hover { //changes button text color upon hover
    color: red;
    //border-color: green;
  }
}

//individual button properties

//slide from left
.slide_L::after { //specifies initial state and transition type for button background cover
    height: 100%;
    width: 0;
    transition: width 0.3s ease-in-out;
}

.slide_L:hover::after { //specifies hover state of button background cover
  width: 100%;
}

//slide from top
.slide_T::after {
    height: 0%;
    width: 100%;
    transition: height 0.3s ease-in-out;
}

.slide_T:hover::after {
  height: 100%;
}

//slide from left but it is not the shape of the button; is more of a rhombus
.slide_skew::after {
  width: 0;
  height: 100%;
  left: -25%;
  transform: (skewX(45deg));
  transition: width 0.3s ease-in-out;
  
}
.slide_skew:hover::after {
  width: 150%;
}

//fill button from center to outside
.fill::after {
  
  transform: scale(0);
  transition: transform 0.3s ease-in-out;
  
}
.fill:hover::after {
  transform: scale(1);
  height: 100%;
  width: 100%;
}


@media screen and (max-width: 700px) {
  .slide_L, .slide_T, .slide_skew, .fill { //cut layers if have smaller screen and also decrease amount moved when hovered/clicked on
    box-shadow: //set 3D effect
    1px 0   0 var(--right-color),
    1px 1px 0 var(--bottom-color),
    2px 1px 0 var(--right-color),
    2px 2px 0 var(--bottom-color),
    3px 2px 0 var(--right-color),
    3px 3px 0 var(--bottom-color),
    4px 3px 0 var(--right-color),
    4px 4px 0 var(--bottom-color),

    -5px 20px 40px -8px #999; //set usual element shadow

  &:focus,
  &:hover {
  box-shadow: //update graphics upon hover
    1px 0   0 var(--right-color),
    1px 1px 0 var(--bottom-color),
    2px 1px 0 var(--right-color),
    2px 2px 0 var(--bottom-color),
    3px 2px 0 var(--right-color),
    3px 3px 0 var(--bottom-color),
    
    -5px 5px 12px -8px #999;

  transform: translate(2px, 1px);
  }
  &:active {
    box-shadow: //minimize 3D graphics to make it look like it is pressed
      1px 0   0 var(--right-color);
    
    transform: translate(1px, 1px); //move to make button seem like it is pressed
  }

}
}